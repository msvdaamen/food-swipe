/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as LayoutActivitiesRouteRouteImport } from './routes/_layout/activities/route'
import { Route as LayoutRecipesRecipesRouteImport } from './routes/_layout/recipes/recipes'
import { Route as LayoutRecipesMeasurementsRouteImport } from './routes/_layout/recipes/measurements'
import { Route as LayoutRecipesIngredientsRouteImport } from './routes/_layout/recipes/ingredients'
import { Route as LayoutRecipesRecipeIdRouteImport } from './routes/_layout/recipes/$recipeId'
import { Route as LayoutActivitiesRecipesUploadedRouteImport } from './routes/_layout/activities/recipes-uploaded'
import { Route as LayoutActivitiesLoginActivityRouteImport } from './routes/_layout/activities/login-activity'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutActivitiesRouteRoute = LayoutActivitiesRouteRouteImport.update({
  id: '/activities',
  path: '/activities',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutRecipesRecipesRoute = LayoutRecipesRecipesRouteImport.update({
  id: '/recipes/recipes',
  path: '/recipes/recipes',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutRecipesMeasurementsRoute =
  LayoutRecipesMeasurementsRouteImport.update({
    id: '/recipes/measurements',
    path: '/recipes/measurements',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutRecipesIngredientsRoute =
  LayoutRecipesIngredientsRouteImport.update({
    id: '/recipes/ingredients',
    path: '/recipes/ingredients',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutRecipesRecipeIdRoute = LayoutRecipesRecipeIdRouteImport.update({
  id: '/recipes/$recipeId',
  path: '/recipes/$recipeId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutActivitiesRecipesUploadedRoute =
  LayoutActivitiesRecipesUploadedRouteImport.update({
    id: '/recipes-uploaded',
    path: '/recipes-uploaded',
    getParentRoute: () => LayoutActivitiesRouteRoute,
  } as any)
const LayoutActivitiesLoginActivityRoute =
  LayoutActivitiesLoginActivityRouteImport.update({
    id: '/login-activity',
    path: '/login-activity',
    getParentRoute: () => LayoutActivitiesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/activities': typeof LayoutActivitiesRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth': typeof AuthIndexRoute
  '/activities/login-activity': typeof LayoutActivitiesLoginActivityRoute
  '/activities/recipes-uploaded': typeof LayoutActivitiesRecipesUploadedRoute
  '/recipes/$recipeId': typeof LayoutRecipesRecipeIdRoute
  '/recipes/ingredients': typeof LayoutRecipesIngredientsRoute
  '/recipes/measurements': typeof LayoutRecipesMeasurementsRoute
  '/recipes/recipes': typeof LayoutRecipesRecipesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/activities': typeof LayoutActivitiesRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth': typeof AuthIndexRoute
  '/activities/login-activity': typeof LayoutActivitiesLoginActivityRoute
  '/activities/recipes-uploaded': typeof LayoutActivitiesRecipesUploadedRoute
  '/recipes/$recipeId': typeof LayoutRecipesRecipeIdRoute
  '/recipes/ingredients': typeof LayoutRecipesIngredientsRoute
  '/recipes/measurements': typeof LayoutRecipesMeasurementsRoute
  '/recipes/recipes': typeof LayoutRecipesRecipesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/activities': typeof LayoutActivitiesRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/': typeof AuthIndexRoute
  '/_layout/activities/login-activity': typeof LayoutActivitiesLoginActivityRoute
  '/_layout/activities/recipes-uploaded': typeof LayoutActivitiesRecipesUploadedRoute
  '/_layout/recipes/$recipeId': typeof LayoutRecipesRecipeIdRoute
  '/_layout/recipes/ingredients': typeof LayoutRecipesIngredientsRoute
  '/_layout/recipes/measurements': typeof LayoutRecipesMeasurementsRoute
  '/_layout/recipes/recipes': typeof LayoutRecipesRecipesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/activities'
    | '/auth/sign-in'
    | '/auth'
    | '/activities/login-activity'
    | '/activities/recipes-uploaded'
    | '/recipes/$recipeId'
    | '/recipes/ingredients'
    | '/recipes/measurements'
    | '/recipes/recipes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/activities'
    | '/auth/sign-in'
    | '/auth'
    | '/activities/login-activity'
    | '/activities/recipes-uploaded'
    | '/recipes/$recipeId'
    | '/recipes/ingredients'
    | '/recipes/measurements'
    | '/recipes/recipes'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/activities'
    | '/auth/sign-in'
    | '/auth/'
    | '/_layout/activities/login-activity'
    | '/_layout/activities/recipes-uploaded'
    | '/_layout/recipes/$recipeId'
    | '/_layout/recipes/ingredients'
    | '/_layout/recipes/measurements'
    | '/_layout/recipes/recipes'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/activities': {
      id: '/_layout/activities'
      path: '/activities'
      fullPath: '/activities'
      preLoaderRoute: typeof LayoutActivitiesRouteRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/recipes/recipes': {
      id: '/_layout/recipes/recipes'
      path: '/recipes/recipes'
      fullPath: '/recipes/recipes'
      preLoaderRoute: typeof LayoutRecipesRecipesRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/recipes/measurements': {
      id: '/_layout/recipes/measurements'
      path: '/recipes/measurements'
      fullPath: '/recipes/measurements'
      preLoaderRoute: typeof LayoutRecipesMeasurementsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/recipes/ingredients': {
      id: '/_layout/recipes/ingredients'
      path: '/recipes/ingredients'
      fullPath: '/recipes/ingredients'
      preLoaderRoute: typeof LayoutRecipesIngredientsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/recipes/$recipeId': {
      id: '/_layout/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof LayoutRecipesRecipeIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/activities/recipes-uploaded': {
      id: '/_layout/activities/recipes-uploaded'
      path: '/recipes-uploaded'
      fullPath: '/activities/recipes-uploaded'
      preLoaderRoute: typeof LayoutActivitiesRecipesUploadedRouteImport
      parentRoute: typeof LayoutActivitiesRouteRoute
    }
    '/_layout/activities/login-activity': {
      id: '/_layout/activities/login-activity'
      path: '/login-activity'
      fullPath: '/activities/login-activity'
      preLoaderRoute: typeof LayoutActivitiesLoginActivityRouteImport
      parentRoute: typeof LayoutActivitiesRouteRoute
    }
  }
}

interface LayoutActivitiesRouteRouteChildren {
  LayoutActivitiesLoginActivityRoute: typeof LayoutActivitiesLoginActivityRoute
  LayoutActivitiesRecipesUploadedRoute: typeof LayoutActivitiesRecipesUploadedRoute
}

const LayoutActivitiesRouteRouteChildren: LayoutActivitiesRouteRouteChildren = {
  LayoutActivitiesLoginActivityRoute: LayoutActivitiesLoginActivityRoute,
  LayoutActivitiesRecipesUploadedRoute: LayoutActivitiesRecipesUploadedRoute,
}

const LayoutActivitiesRouteRouteWithChildren =
  LayoutActivitiesRouteRoute._addFileChildren(
    LayoutActivitiesRouteRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutActivitiesRouteRoute: typeof LayoutActivitiesRouteRouteWithChildren
  LayoutRecipesRecipeIdRoute: typeof LayoutRecipesRecipeIdRoute
  LayoutRecipesIngredientsRoute: typeof LayoutRecipesIngredientsRoute
  LayoutRecipesMeasurementsRoute: typeof LayoutRecipesMeasurementsRoute
  LayoutRecipesRecipesRoute: typeof LayoutRecipesRecipesRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutActivitiesRouteRoute: LayoutActivitiesRouteRouteWithChildren,
  LayoutRecipesRecipeIdRoute: LayoutRecipesRecipeIdRoute,
  LayoutRecipesIngredientsRoute: LayoutRecipesIngredientsRoute,
  LayoutRecipesMeasurementsRoute: LayoutRecipesMeasurementsRoute,
  LayoutRecipesRecipesRoute: LayoutRecipesRecipesRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
